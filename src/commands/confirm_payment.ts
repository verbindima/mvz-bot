import { BotContext } from '@/bot';
import { prisma } from '@/utils/database';
import { getCurrentWeek } from '@/utils/week';
import { CONFIG } from '@/config';

export const confirmPaymentCommand = async (ctx: BotContext): Promise<void> => {
  try {
    const player = await ctx.playerService.getPlayer(ctx.from!.id);
    
    if (!player) {
      await ctx.reply('‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start');
      return;
    }

    const { week, year } = getCurrentWeek();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø–∏—Å–∞–Ω –ª–∏ –∏–≥—Ä–æ–∫ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    const weekEntry = await prisma.weekEntry.findFirst({
      where: {
        week,
        year,
        playerId: player.id,
      },
    });

    if (!weekEntry) {
      await ctx.reply('‚ùå –í—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –∏–≥—Ä—É. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—à–∏—Ç–µ—Å—å —á–µ—Ä–µ–∑ /info');
      return;
    }

    if (weekEntry.isPaid) {
      await ctx.reply('‚úÖ –í–∞—à–∞ –æ–ø–ª–∞—Ç–∞ —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!');
      return;
    }

    // –û—Ç–º–µ—á–∞–µ–º –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã
    await prisma.weekEntry.update({
      where: { id: weekEntry.id },
      data: { paymentTime: new Date() },
    });

    await ctx.reply(
      '‚úÖ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!</b>\n\n' +
      '–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.\n' +
      '–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.',
      { parse_mode: 'HTML' }
    );

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤–æ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã
    const gameSession = await prisma.gameSession.findUnique({
      where: {
        week_year: { week, year },
      },
    });

    if (gameSession?.isInitialized) {
      const adminMessage = 
        `üí≥ <b>–ù–æ–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã</b>\n\n` +
        `üë§ –ò–≥—Ä–æ–∫: ${player.firstName} (@${player.username})\n` +
        `üíµ –°—É–º–º–∞: ${gameSession.paymentAmount} ‚ÇΩ\n` +
        `üì± –ù–æ–º–µ—Ä: ${gameSession.paymentPhone}\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /confirm_player_payment @${player.username} –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
      for (const adminId of CONFIG.ADMINS) {
        try {
          await ctx.telegram.sendMessage(adminId, adminMessage, { parse_mode: 'HTML' });
        } catch (error) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∞–º (–º–æ–≥–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞)
        }
      }
    }

  } catch (error) {
    console.error('Error in confirm payment command:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã.');
  }
};