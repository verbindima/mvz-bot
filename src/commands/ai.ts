import { BotContext } from '../bot';
import { checkAdminAnyChat } from '../utils/chat';

export const aiCommand = async (ctx: BotContext): Promise<void> => {
  try {
    if (!await checkAdminAnyChat(ctx)) {
      return;
    }

    const text = ('text' in ctx.message! && ctx.message.text) ? ctx.message.text : '';
    const query = text.replace('/ai', '').trim();
    
    if (!query) {
      await ctx.reply(
        `ü§ñ <b>AI –ø–æ–º–æ—â–Ω–∏–∫</b>\n\n` +
        `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /ai –≤–∞—à –≤–æ–ø—Ä–æ—Å\n\n` +
        `<b>–ü—Ä–∏–º–µ—Ä:</b>\n` +
        `/ai –û–±—ä—è—Å–Ω–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç`
      , { parse_mode: 'HTML' });
      return;
    }

    await ctx.reply('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç...');

    const response = await ctx.aiService.generateResponse(query);
    
    await ctx.reply(`ü§ñ <b>AI –û—Ç–≤–µ—Ç:</b>\n\n${response}`, { parse_mode: 'HTML' });
    
  } catch (error) {
    console.error('Error in AI command:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI.');
  }
};